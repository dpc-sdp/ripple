// Functions
//
// Utility mixins and functions for evaluating source code across our variables, maps, and mixins.

$rpl-font-base: 16px !default;

// Replace `$search` with `$replace` in `$string`
// Used on our SVG icon backgrounds for custom forms.
//
// @author Hugo Giraudel
// @param {String} $string - Initial string
// @param {String} $search - Substring to replace
// @param {String} $replace ('') - New value
// @return {String} - Updated string
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

// Convert a pixel value into a rem value.
//
// @param {String} $pxval - A pixel value.
// @param {Number} $base ($rpl-font-base) - Number (e.g. 20px)
// @return {Number} - Rem value
@function rem($pxval, $base: null) {
  @if $base == null {
    $base: $rpl-font-base;
  }
  $pxbase: $base;
  @return ($pxval / $pxbase) * 1rem;
}

// Fonts
@function rpl-font($name) {
  @if map-get($rpl-fonts, $name) == null {
    @error '"#{$name}" is not an available font';
  }

  $font: map-get($rpl-fonts, $name);
  @if (type-of($font) == 'map') {
    @return map-get($font, 'family');
  } @else {
    @return $font;
  }
}

@function rpl-font-size($name) {
  @if map-get($rpl-font-sizes, $name) == null {
    @error '"#{$name}" is not an available font size';
  }
  @return map-get($rpl-font-sizes, $name);
}

// Colors
@function rpl-color($name: 'primary') {
  $all-colors: rpl-get-colors();
  @if map-get($all-colors, $name) == null {
    @error '"#{$name}" is not an available colour';
  }
  @return map-get($all-colors, $name);
}

@function rpl-get-colors() {
  // Combine custom colors with fallback.
  @return map-merge($rpl-colors-core, $rpl-colors);
}

@function rpl-gradient($name: 'primary_gradient') {
  @if map-get($rpl-gradients, $name) == null {
    @error '"#{$name}" is not an available gradient';
  }
  @return map-get($rpl-gradients, $name);
}

// Graphic
@function rpl_graphic_right_angled_triangle($color) {
  $color-no-hash: str-slice(quote(rpl_color($color)), 2);
  @return 'data:image/svg+xml,%3Csvg%20width%3D%2249%22%20height%3D%22100%22%20viewBox%3D%220%200%2049%20100%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M49%20100H0L49%200V100Z%22%20fill%3D%22%23#{$color-no-hash}%22%2F%3E%3C%2Fsvg%3E';
}
