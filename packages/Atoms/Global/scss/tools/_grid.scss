//
// A Flexbox Grid
// https://caniuse.com/#feat=flexbox
// https://github.com/philipwalton/flexbugs
//

// Helpers
@function rpl-grid-get-columns($grid) {
  @return map-get($grid, 'columns');
}

@function rpl-grid-get-gutter($grid) {
  @return map-get($grid, 'gutter');
}

@function rpl-grid-get-row-gutter($grid) {
  @return map-get($grid, 'row_gutter');
}

// Mixins
//
// Example scss for using default grid:
// @code
// .main {
//   @include rpl_grid_container;
//
//   .layout {
//     @include rpl_grid_row;
//
//     .left {
//       @include rpl_grid_full;
//
//       @include rpl_breakpoint(m) {
//         @include rpl_grid_column(8);
//       }
//     }
//
//     .right {
//       @include rpl_grid_full;
//
//       @include rpl_breakpoint(m) {
//         @include rpl_grid_column(4);
//       }
//     }
//   }
// }
// @endcode
//
// Example scss for using custom grid in place:
// @code
// $my-custom-grid: (
//   columns: 3,
//   gutter: 20px,
//   row_gutter: 4px
// );
//
// .main {
//   @include rpl_grid_container;
//
//   .layout {
//     @include rpl_grid_row($my-custom-grid);
//
//     .left {
//       @include rpl_grid_full;
//
//       @include breakpoint(md) {
//         @include rpl_grid_column(2, $my-custom-grid);
//       }
//     }
//
//     .right {
//       @include rpl_grid_full;
//
//       @include breakpoint(md) {
//         @include rpl_grid_column(1, $my-custom-grid);
//       }
//     }
//   }
// }
// @endcode
//
@mixin rpl_grid_container {
  overflow-x: hidden;
}

@mixin rpl_grid_row($grid: $rpl-grid) {
  box-sizing: border-box;
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;

  @if rpl_grid_get_gutter($grid) != 0 {
    $_container-margin: rpl_grid_get_gutter($grid) / 2;

    @if unit(rpl_grid_get_gutter($grid)) == '%' {
      $_container-margin: ((rpl_grid_get_gutter($grid) + 99.99%) * (rpl_grid_get_gutter($grid) / 100%)) / 2;
    }

    margin-left: $_container-margin * -1;
    margin-right: $_container-margin * -1;
    width: calc(99.99% + #{$_container-margin} * 2);
  } @else {
    width: 99.99%;
  }
}

@mixin rpl_grid_row_gutter($row-gutter: rpl-grid-get-row-gutter($rpl-grid)) {
  > div {
    @if type-of($row-gutter) == map {
      @each $bp, $gutter in $row-gutter {
        @include rpl_breakpoint($bp) {
          margin-bottom: $gutter;
        }
      }
    } @else {
      margin-bottom: $row-gutter;
    }
  }
}

@mixin rpl_grid_column($grid-cols: 1, $grid: $rpl-grid) {
  box-sizing: border-box;
  flex: 0 0 auto;

  @if rpl_grid_get_gutter($grid) != 0 {
    width: calc(#{percentage($grid-cols / rpl_grid_get_columns($grid))} - #{rpl_grid_get_gutter($grid)});
    margin-left: rpl_grid_get_gutter($grid) / 2;
    margin-right: rpl_grid_get_gutter($grid) / 2;
  } @else {
    width: #{percentage($grid-cols / rpl_grid_get_columns($grid))};
  }
}

@mixin rpl_grid_full($grid: $rpl-grid) {
  @include rpl_grid_column(rpl_grid_get_columns($grid), $grid);
}

// Push & pull
@mixin rpl_grid_push($grid-cols: 1, $grid: $rpl-grid) {
  position: relative;
  left: calc(#{percentage($grid-cols / rpl_grid_get_columns($grid))});
}

@mixin rpl_grid_pull($grid-cols: 1, $grid: $rpl-grid) {
  position: relative;
  left: calc(#{percentage($grid-cols / rpl_grid_get_columns($grid))} * -1);
}

@mixin rpl_grid_push_pull_reset {
  left: 0;
}

// Order
@mixin rpl_grid_order($grid-weight) {
  order: $grid-weight;
}
